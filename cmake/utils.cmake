function(extract_version include_folder version_identifier)
    file(READ "${CMAKE_SOURCE_DIR}/include/${include_folder}/version.h" file_contents)
    string(REGEX MATCH "${version_identifier}_VER_MAJOR ([0-9]+)" _ "${file_contents}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Could not extract major version number from ${include_folder}/version.h")
    endif()
    set(ver_major ${CMAKE_MATCH_1})

    string(REGEX MATCH "${version_identifier}_VER_MINOR ([0-9]+)" _ "${file_contents}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Could not extract minor version number from ${include_folder}/version.h")
    endif()

    set(ver_minor ${CMAKE_MATCH_1})
    string(REGEX MATCH "${version_identifier}_VER_PATCH ([0-9]+)" _ "${file_contents}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Could not extract patch version number from ${include_folder}/version.h")
    endif()
    set(ver_patch ${CMAKE_MATCH_1})

    set(${version_identifier}_VERSION_MAJOR ${ver_major} PARENT_SCOPE)
    set(${version_identifier}_VERSION_MINOR ${ver_minor} PARENT_SCOPE)
    set(${version_identifier}_VERSION_PATCH ${ver_patch} PARENT_SCOPE)
    set(${version_identifier}_VERSION "${ver_major}.${ver_minor}.${ver_patch}" PARENT_SCOPE)
endfunction()

function(component_extract_version include_folder version_identifier)
    file(READ "${CMAKE_SOURCE_DIR}/include/${include_folder}/version.h" file_contents)
    string(REGEX MATCH "${version_identifier}_VER_MAJOR ([0-9]+)" _ "${file_contents}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Could not extract major version number from ${include_folder}/version.h")
    endif()
    set(ver_major ${CMAKE_MATCH_1})

    string(REGEX MATCH "${version_identifier}_VER_MINOR ([0-9]+)" _ "${file_contents}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Could not extract minor version number from ${include_folder}/version.h")
    endif()

    set(ver_minor ${CMAKE_MATCH_1})
    string(REGEX MATCH "${version_identifier}_VER_PATCH ([0-9]+)" _ "${file_contents}")
    if(NOT CMAKE_MATCH_COUNT EQUAL 1)
        message(FATAL_ERROR "Could not extract patch version number from ${include_folder}/version.h")
    endif()
    set(ver_patch ${CMAKE_MATCH_1})

    set(${version_identifier}_VERSION_MAJOR ${ver_major} PARENT_SCOPE)
    set(${version_identifier}_VERSION_MINOR ${ver_minor} PARENT_SCOPE)
    set(${version_identifier}_VERSION_PATCH ${ver_patch} PARENT_SCOPE)
    set(${version_identifier}_VERSION "${ver_major}.${ver_minor}.${ver_patch}" PARENT_SCOPE)
endfunction()